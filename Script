local HubName = "dingus.nub {Ver: 2.1}"
local NotifiTime = 3
local waitingtimeafternotifi = NotifiTime + 1

local noclip = false
local AutoTask = false
local Map = ""

----------------------------------------
local AkaliNotif = loadstring(game:HttpGet("https://raw.githubusercontent.com/Kinlei/Dynissimo/main/Scripts/AkaliNotif.lua"))();
local Notify = AkaliNotif.Notify;

local UILib = loadstring(game:HttpGet('https://raw.githubusercontent.com/inceldom/kinx/main/ui'))()

Notify({
    Description = "Please Don't Leave The Game Or Run The Script Many Times";
    Title =  ""..HubName.." Now Loading!";
    Duration = NotifiTime;
});
task.wait(waitingtimeafternotifi)

local win = UILib:Window(HubName,Color3.fromRGB(44, 120, 224), Enum.KeyCode.P)

-------// Sections //-------
local MainSection = win:Tab("Main")
local Visual = win:Tab("Visual")
local Teleport = win:Tab("Teleport")
local Settings = win:Tab("Settings")
local Mics = win:Tab("Mics")
-------// Map Checker //-------
function MapChecker()
    for i,v in pairs(game:GetService("Workspace").LoadedMap:GetChildren()) do
        if v.Name == "Bank" then
        Map = "[ Wild West ]"
        Notify({
                Description = "Getting Task Data...!";
                Title =  "Map Detector: [ Wild West ]";
                Duration = NotifiTime;
            });
        elseif v.Name == "VendingSabotague" then
        Map = "[ Clasical ]"
        Notify({
            Description = "Getting Task Data...!";
            Title =  "Map Detector: [ Clasical ]";
            Duration = NotifiTime;
        });
        end
    end
end
function nillMap()
    for i,v in pairs(game:GetService("Workspace").LoadedMap:GetChildren()) do
        if v == nil then
            return MapChecker()
        end
    end
end


-------// Main //-------

MainSection:Toggle("Instance Task [ALL]",false, function(t)
    AutoTask = t
    if not AutoTask then return end
    if AutoTask then
        while AutoTask do
            MapChecker()
            task.wait(5)
            for i = 1,100 do
                local ohNumber1 = i
            
                game:GetService("ReplicatedStorage").Remotes.InvokeTaskCompleted:InvokeServer(ohNumber1)
            end
            wait(.00001)
        end
      
    end

end)
MainSection:Slider("WalkSpeed",16,1000,16, function(t)
	game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = t
end)

MainSection:Slider("Jump Power",50,1000,50, function(t)
	game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower = t
end)
-------// Visual //-------
local ESPEnabled = false
local DistanceEnabled = true
local TracersEnabled = true



local blindremove = false
function blindremovef()
    if blindremove then
        while wait(1) do
            game:GetService("Players").LocalPlayer.PlayerGui.BlindnessGui.Frame.BackgroundTransparency = 1
		    
        end
		
    end
end
function ReturnColor(model)
    if game:GetService("Players")[model.Name].Backpack:FindFirstChild("Knife") or game:GetService("Players")[model.Name]:FindFirstChild("Knife") then return Color3.fromRGB(255,0,0) end
    if game:GetService("Players")[model.Name].Backpack:FindFirstChild("Gun") or game:GetService("Players")[model.Name].Backpack:FindFirstChild("Revolver") or game:GetService("Players")[model.Name]:FindFirstChild("Revolver") or game:GetService("Players")[model.Name]:FindFirstChild("Gun") then return Color3.fromRGB(0,0,255) end
    return Color3.fromRGB(0, 255, 0)
end
function EspAdd()

    
    pcall(function()
        
        Camera = game:GetService("Workspace").CurrentCamera
        RunService = game:GetService("RunService")
        camera = workspace.CurrentCamera
        Bottom = Vector2.new(camera.ViewportSize.X/2, camera.ViewportSize.Y)
    
        function GetPoint(vector3)
            local vector, onScreen = camera:WorldToScreenPoint(vector3)
            return {Vector2.new(vector.X,vector.Y),onScreen,vector.Z}
        end
        
        function MakeESP(model)
            local CurrentParent = model.Parent
        
            local TopL = Drawing.new("Line")
            local BottomL = Drawing.new("Line")
            local LeftL = Drawing.new("Line")
            local RightL = Drawing.new("Line")
            local Tracer = Drawing.new("Line")
            local Display = Drawing.new("Text")
    
            coroutine.resume(coroutine.create(function()
                while model.Parent == CurrentParent and model.Humanoid.Health > 0 do
                    
                    local Distance = (Camera.CFrame.Position - model.HumanoidRootPart.Position).Magnitude
                    local GetP = GetPoint(model.Head.Position)
                    local headps = model.Head.CFrame
                    
                    if ESPEnabled and GetP[2] then
                        
                        -- Calculate Cords
                        local topright = headps * CFrame.new(3,0.5, 0)
                        local topleft = headps * CFrame.new(-3,0.5, 0)
                        local bottomleft = headps * CFrame.new(-3,-7,0)
                        local bottomright = headps * CFrame.new(3,-7,0)
                        topright = GetPoint(topright.p)[1]
                        topleft = GetPoint(topleft.p)[1]
                        bottomleft = GetPoint(bottomleft.p)[1]
                        bottomright = GetPoint(bottomright.p)[1]
    
                        teamcolor = ReturnColor(model)
                        TopL.Color, BottomL.Color, RightL.Color, LeftL.Color = teamcolor, teamcolor, teamcolor, teamcolor
                        TopL.From, BottomL.From, RightL.From, LeftL.From = topleft, bottomleft, topright, topleft
                        TopL.To, BottomL.To, RightL.To, LeftL.To = topright, bottomright, bottomright, bottomleft
                        TopL.Visible, BottomL.Visible, RightL.Visible, LeftL.Visible = true, true, true, true
                    else
                        TopL.Visible, BottomL.Visible, RightL.Visible, LeftL.Visible = false, false, false, false
                    end
                    
                    if ESPEnabled and TracersEnabled and GetP[2] then
                        Tracer.Color = ReturnColor(model)
                        Tracer.From = Bottom
                        Tracer.To = GetPoint(headps.p)[1]
                        Tracer.Thickness = 1.5
                        Tracer.Visible = true
                    else
                        Tracer.Visible = false
                    end
                    
                    if ESPEnabled and DistanceEnabled and GetP[2] then
                        Display.Visible = true
                        Display.Position = GetPoint(headps.p + Vector3.new(0,0.5,0))[1]
                        Display.Center = true
                        Display.Text = tostring(math.floor(Distance)).." studs"
                    else
                        Display.Visible = false
                    end
                    
                    RunService.RenderStepped:Wait()
                end
        
                TopL:Remove()
                BottomL:Remove()
                RightL:Remove()
                LeftL:Remove()
                Tracer:Remove()
                Display:Remove()
            
            end))
        end
        
        for _, Player in next, game:GetService("Players"):GetChildren() do
            if Player.Name ~= game.Players.LocalPlayer.Name then
                MakeESP(Player.Character)
                Player.CharacterAdded:Connect(function()
                    delay(0.5, function()
                        MakeESP(Player.Character)
                    end)
                end)
            end	
        end
        
        game:GetService("Players").PlayerAdded:Connect(function(player)
            player.CharacterAdded:Connect(function()
                delay(0.5, function()
                    MakeESP(player.Character)
                end)
            end)
        end)
        
    end)
end


Visual:Label("The ESP May Not Work Sometimes!")
Visual:Toggle("ESP",false, function(t)
    ESPEnabled = t
    if not ESPEnabled then return end
    EspAdd()
end)


Visual:Toggle("Blind Remove",false, function(t)
    blindremove = t
    blindremovef()
end)
-------// Teleport //-------
-------// Settings //-------
Settings:Label("UI Toggle Key:  P")
Settings:Label("This Script Make By Nub")
Settings:Label("The Name Of The lib is kinx")
Settings:Button("Copy Kinx Lib Here", function()
    setclipboard("local UILib = loadstring(game:HttpGet('https://raw.githubusercontent.com/inceldom/kinx/main/ui'))()")
    UILib:Notification("Notification", "Copied!", "Okay")
end)
Settings:Label("The Doc Of This lib is on the internet U can find them")
-------// Mics //-------
Mics:Button("Rejoin Server", function()
    local ts = game:GetService("TeleportService")
    local p = game:GetService("Players").LocalPlayer
    ts:Teleport(game.PlaceId, p)
end)
